/*
 * File: app/store/DocumentsJsonStore.js
 * Date: Thu Feb 09 2012 16:52:45 GMT+0400 (Ìîñêîâñêîå âðåìÿ (çèìà))
 *
 * This file was generated by Ext Designer version 1.2.2.
 * http://www.sencha.com/products/designer/
 *
 * This file will be auto-generated each and everytime you export.
 *
 * Do NOT hand edit this file.
 */

Ext.define('PetroRes.store.DomainDocumentsJsonStore', {
    extend: 'Ext.data.Store',
    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            autoLoad: false,
            autoSync: true,
            buffered: true,
            //limit:-1,
            pageSize: 200,
            remoteSort: true,
            proxy: {
                type: 'ajax',
                url: 'rest/documents',
                //limit:100,
                headers: {
                    Accept: 'application/json'
                },
                reader: {
                    type: 'json',
                    idProperty: 'id',
                    root: 'documents'
                }
            },
            fields: [
                {   name: 'id',                 type: 'int' },
                    {   name: 'year'                            },
                    {   name: 'number'                          },
                {   name: 'archiveNumber'                   },
                    {   name: 'title'                           },
                    {   name: 'fullTitle'                       },
                {   name: 'type'                            },
                {   name: 'comment'                         },
                {   name: 'originationDetails'              },
                {   name: 'limitationDetails'               },
                {   name: 'originationDate',    type: 'date'},
                {   name: 'approvalDate',       type: 'date'},
                {   name: 'registrationDate',   type: 'date'},
                {   name: 'placementDate',      type: 'date'},
                {   name: 'placer'                          },
                {   name: 'updateDate',         type: 'date'},
                {   name: 'pageCount'                       },
                {   name: 'geometryType'                    },
                {   name: 'scale'                           },
                {   name: 'resolution'                      },
                {   name: 'projection'                      },
                {   name: 'periodicity'                     },
                {   name: 'classification'                  },
                {   name: 'site'                            },
                {   name: 'stage'                           },
                {   name: 'words'                           },
                {   name: 'authors'                         },
                {   name: 'geoObjects'                      },
                {   name: 'domain'                          },
                    {   name: 'files'                           },
                {   name: 'typeOfWork'                      },
                {   name: 'workProcess'                     }
            ]
        }, cfg)]);
    },
    loadDocuments:function(domainId, domainLevel, domainName, domainFullName){
        this.getProxy().extraParams.domainId=domainId;
        this.load({ scope:this,
                    callback: function(records, operation, success) {
                    //the operation object contains all of the details of the load operation
                        var p = 0;
                    }});
    }
});