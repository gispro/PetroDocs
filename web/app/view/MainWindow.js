/*
 * File: app/view/MainWindow.js
 * Date: Tue Jan 31 2012 14:44:12 GMT+0400 (Ìîñêîâñêîå âðåìÿ (çèìà))
 *
 * This file was generated by Ext Designer version 1.2.2.
 * http://www.sencha.com/products/designer/
 *
 * This file will be generated the first time you export.
 *
 * You should implement event handling and custom methods in this
 * class.
 */


Ext.define('PetroRes.view.MainWindow', {
    extend: 'PetroRes.view.ui.MainWindow',
    
    closable: false,
    title: 'Petroresource Documents System',
    maximizable: false,
    maximized: true,
    resizable: false,
    height:Ext.getBody().getViewSize().height*0.5,
    width:Ext.getBody().getViewSize().width*0.5,
    layout: 'fit',
    id: 'MainWindow',
    
    openPetroWindows: {},
    openPetroWindow: function(handler, windowCfg){
        var me = this;// Ext.getCmp('MainWindow');
        var body = me.getLayout().getTarget();
        Ext.applyIf(windowCfg, {
            constrain: true,
            height:body.getHeight()*0.5,
            width:body.getWidth()*0.5,
            renderTo: body,
            listeners: {
                close: function(){
                    delete me.openPetroWindows[handler];
                    return true;
                }
            }
        });
        var wnd = me.openPetroWindows[handler] ||                         
            (me.openPetroWindows[handler] = 
            Ext.create('Ext.Window', windowCfg));
        wnd.show();
    },
    
    
    dockedItems: [
    {
        xtype: 'toolbar',
        dock: 'top',
        items: [
        {
            xtype: 'button',
            text: 'Document',
            menu: {
                xtype: 'menu',
                //width: 120,
                items: [
                {
                    xtype: 'menuitem',
                    text: 'Register',
                    handler: function(){
                        var wnd = Ext.getCmp('MainWindow');
                        wnd.openPetroWindow('newDoc', {
                            closable: true,
                            title: 'New Document',
                            maximizable: true,
                            maximized: true,
                            height:wnd.getHeight()*0.8,
                            width:wnd.getWidth()*0.8,
                            layout: 'fit',
                            items: [
                            Ext.create('PetroRes.view.DocumentForm')
                            ]
                        });
                    }
                },
                /*{
                    xtype: 'menuitem',
                    text: 'Open Document',
                    handler: function(){
                        var wnd = Ext.getCmp('MainWindow');
                        var docStore = Ext.getStore('DocumentsJsonStore');
                        
                        docStore.load({
                            url: 'rest/documents/'+47,
                            callback: function(records){
                                if(records.length < 1){
                                    return;
                                }
                                var curDocRec = records[0];
                                //console.log(curUser);

                                var frm = Ext.create('PetroRes.view.DocumentFormEdit');
                                wnd.openPetroWindow('editDoc', {
                                    closable: true,
                                    title: 'Edit Document',
                                    maximizable: true,
                                    maximized: true,
                                    height:wnd.getHeight()*0.8,
                                    width:wnd.getWidth()*0.8,
                                    layout: 'fit',
                                    items: [
                                        frm
                                    ]
                                });
                                frm.getForm().loadRecord(curDocRec);
                            }
                        });
                    }
                },*/
                {
                    xtype: 'menuitem',
                    text: 'Find',
                    handler: function(){
                        var wnd = Ext.getCmp('MainWindow');
                        wnd.openPetroWindow('searchDoc', {
                            closable: true,
                            title: 'Find Document',
                            maximizable: true,
                            maximized: true,
                            height:wnd.getHeight()*0.8,
                            width:wnd.getWidth()*0.8,
                            layout: 'fit',
                            items: [
                                Ext.create('PetroRes.view.DocumentSearchForm')
                            ]
                        });
                        
                    }
                },
                {
                    xtype: 'menuitem',
                    text: 'Documents Catalog',
                    handler: function(){
                        var store = Ext.data.StoreManager.lookup('DocsViewDomainsJsonTreeStore');
                        if(!store)
                            Ext.create( 'PetroRes.store.DomainsJsonTreeStore', 
                                        {storeId:'DocsViewDomainsJsonTreeStore'});

                        var wnd = Ext.getCmp('MainWindow'),
                            pnlTree = Ext.create('PetroRes.view.DomainsTreePanel',
                                                 {editable:false, store:'DocsViewDomainsJsonTreeStore'}),
                            pnlDocumentsGreed = Ext.create('PetroRes.view.DomainDocumentsGridPanel',{ region:'center', domainsTree: pnlTree }),
                            pnlAddDocument = Ext.create('PetroRes.view.DomainDocumentsAddPanel',{ region:'north', height:27});
                            
                            pnlAddDocument.addListener('documentadded',
                                                        function(p1, p2){
                                                            var ddStore = Ext.data.StoreManager.lookup('DomainDocumentsJsonStore'),
                                                                raw = this.getTemplateDomain();
                                                            ddStore.loadDocuments(raw.id, raw.level, raw.name, raw.fullName);
                                                        },
                                                        pnlAddDocument);
                            pnlAddDocument.addListener('documentdeleted',
                                                        function(p1, p2){
                                                            var ddStore = Ext.data.StoreManager.lookup('DomainDocumentsJsonStore'),
                                                                raw = this.getTemplateDomain();
                                                            ddStore.loadDocuments(raw.id, raw.level, raw.name, raw.fullName);
                                                        },
                                                        pnlAddDocument);
                            Ext.apply(pnlTree,{
                                region: 'center'
                            });
                            pnlTree.addListener('select', 
                                                function( selRowModel, record, index, eOpts ){
                                                    //Ext.selection.RowModel this, Ext.data.Model record, Number index, Object eOpts
                                                    pnlAddDocument.setTemplateDomain(record);
                                                    //tf.labelEl.update(record.raw.name+': ');
                                                    var ddStore = Ext.data.StoreManager.lookup('DomainDocumentsJsonStore');
                                                    ddStore.loadDocuments(record.raw.id, record.raw.level, record.raw.name, record.raw.fullName);
                                                });
                             pnlDocumentsGreed.addListener('select',
                                                                    //( Ext.selection.RowModel this, Ext.data.Model record, Number index, Object eOpts){
                                                            function( selRowModel, record, index, eOpts){
                                                                pnlAddDocument.setTemplateDocument(record);
                                                            });
                        wnd.openPetroWindow('domaindocuments', {
                            closable: true,
                            width:wnd.getWidth()*0.9,
                            title: 'Documents Catalog',
                            maximizable: true,
                            maximized: false,
                            layout: 'border',//'fit',
                            items: [
                                {xtype:'panel', layout:'border', region:'west', width: wnd.getWidth()*0.3, split: true,
                                  items:[
                                        Ext.create('PetroRes.view.DocumentSimpleSearchPanel',{region:'north', height:27}),
                                        pnlTree
                                    ]},
                                {xtype:'panel', layout:'border', region:'center',
                                    items:[
                                        pnlAddDocument,
                                        pnlDocumentsGreed
                                    ]}
                                //pnlTools,
                                //pnlTree,
                                //pnlDocumentsGreed
                            ]
                        });
                    }
                }
                ]
            }
        },{
            xtype: 'button',
            text: 'Map',
            menu: {
                xtype: 'menu',
                items: [
                {
                    xtype: 'menuitem',
                    text: 'Caspian Sea',
                    handler: function(){
                        var layers = petroresConfig.layersCreator();

                        var vectorLayers = [];  
                        var editableLayers = [];
                        for(var l in layers){
                            if(layers[l].CLASS_NAME == 'OpenLayers.Layer.Vector'){
                                vectorLayers.push(layers[l]);
                                //if(layers[l].editingPanel)
                                {
                                    editableLayers.push({
                                        name: layers[l].name,
                                        val: layers[l]
                                    })
                                }

                                layers[l].events.on({
                                    featureselected: function(sel) {
                                        wnd.openPetroWindows.geMapWindow.selectedFeatures[sel.feature.fid] = sel.feature;
                                        //console.log(wnd.openPetroWindows.mapWindow.selectedFeatures);
                                    },
                                    featureunselected: function(sel) {
                                        delete wnd.openPetroWindows.geMapWindow.selectedFeatures[sel.feature.fid];
                                        //console.log(wnd.openPetroWindows.mapWindow.selectedFeatures);
                                    }
                                });


                            };
                        }                        

                        var selectControl = new OpenLayers.Control.SelectFeature(vectorLayers, {
                                    clickout: false, toggle: true,
                                    multiple: false, hover: false,
                                    toggleKey: "ctrlKey", // ctrl key removes from selection
                                    multipleKey: "shiftKey", // shift key adds to selection
                                    box: true,
                                    displayInLayerSwitcher: false
                                });

                        var mapPanel = 
                                Ext.create('GeoExt.panel.Map', {
                                    id: 'bigGextMapPanel',
                                    map: {allOverlays: false},
                                    //extent: new OpenLayers.Bounds(45.00, 36.18, 55, 47.50)
                                    //, displayProjection: new OpenLayers.Projection("EPSG:4326")
                                    //,projection: new OpenLayers.Projection("EPSG:4326")
                                    extent: new OpenLayers.Bounds(
                                        5082754.0816867,
                                        5417407.5350582,
                                        5806765.6135031,
                                        5857073.3216934
                                    )
                                    , displayProjection: new OpenLayers.Projection("EPSG:900913")
                                    ,projection: new OpenLayers.Projection("EPSG:900913")
                                    ,layers: layers,
                                    region: "center"
                                    ,selectControl: selectControl
                                });
                                
                        mapPanel.map.addControl(selectControl)
                                
                        var store = Ext.create('Ext.data.TreeStore', {
                            model: 'GeoExt.data.LayerTreeModel',
                            storeId: 'BigMapLayers',
                            root: {
                                expanded: true,
                                children: [
                                    {
                                        plugins: [{
                                            ptype: 'gx_overlaylayercontainer'
                                            //,store: mapPanel.layers
                                            ,loader: {store: mapPanel.layers}
                                        }],
                                        expanded: true
                                    },
                                    {
                                        plugins: [{
                                            ptype: 'gx_baselayercontainer'
                                            //,store: mapPanel.layers
                                            ,loader: {store: mapPanel.layers}
                                        }],
                                        expanded: true
                                    }                             
                                    /*{
                                        plugins: [
                                            {
                                                ptype: 'gx_baselayercontainer',
                                                store: mapPanel.layers
                                            }
                                        ],
                                        expanded: true,
                                        text: "Base Maps"
                                    }, {
                                        plugins: [
                                            {
                                                ptype: 'gx_overlaylayercontainer',
                                                store: mapPanel.layers
                                            }
                                        ],
                                        expanded: true
                                    }*/
                                ]
                            }
                        });
                        
                        var tree = Ext.create('GeoExt.tree.Panel', {
                            border: true,
                            region: "west",
                            title: "Layers",
                            width: 200,
                            split: true,
                            collapsible: true,
                            collapseMode: "header",
                            autoScroll: true,
                            store: store,
                            rootVisible: false,
                            lines: false
                        });
                        
                        var legendPanel = Ext.create('GeoExt.panel.Legend', {
                            layerStore: mapPanel.layers,
                            title: "Legend",
                            defaults: {
                                labelCls: 'mylabel',
                                style: 'padding:5px'
                            },
                            bodyStyle: 'padding:5px',
                            split: true,
                            collapsible: true,
                            collapseMode: "header",
                            width: 180,
                            autoScroll: true,
                            region: 'east'
                            //preferredTypes: ["Point", "Line", "Polygon"]
                        });                        
                        
                        /*var printPage;
                        var printProvider = Ext.create('GeoExt.data.MapfishPrintProvider', {
                            url: "form/proxy?url=http://oceanviewer.ru/print/pdf"
                            //capabilities: printCapabilities
                            ,autoLoad: true
                            ,listeners: {
                                "loadcapabilities": function() {
                                    printPage = Ext.create('GeoExt.data.PrintPage', {
                                        printProvider: printProvider
                                    });
                                    Ext.getCmp('pdfButton').setDisabled(false);
                                }
                            }
                             
                        });*/
                        //printPage = Ext.create('GeoExt.data.PrintPage', {
                        //    printProvider: printProvider
                        //});
                        
                        //var printPage = Ext.create('GeoExt.data.PrintPage', {
                        //    printProvider: printProvider
                        //});                        
                        
                        var tbar = [
                                    {
                                        xtype: 'button',
                                        text: 'Pan',
                                        toggleGroup: 'modeGr',
                                        pressed: true,
                                        handler: function(){
                                            var selCombo = Ext.getCmp('GESelectEditableLayerCombo');
                                            selCombo.clearValue();
                                            selCombo.store.data.each(function(item){
                                                if(item.data.val.editingPanel){
                                                    item.data.val.editingPanel.deactivate();
                                                    item.data.val.editingPanel.div.style.display = 'none';
                                                }
                                            });
                                            selCombo.disable();
                                            selectControl.deactivate();
                                        }
                                    },
                                    petroresConfig.userIsEditor || petroresConfig.userIsAdmin ?{
                                        xtype: 'button',
                                        text: 'Edit',
                                        toggleGroup: 'modeGr',
                                        handler: function(){
                                            var selCombo = Ext.getCmp('GESelectEditableLayerCombo');
                                            selCombo.clearValue();
                                            selCombo.enable();
                                            selCombo.store.data.each(function(item){
                                                if(item.data.val.editingPanel){
                                                    item.data.val.editingPanel.deactivate();
                                                    item.data.val.editingPanel.div.style.display = 'none';
                                                }
                                            });
                                            selectControl.deactivate();
                                        }
                                    }:undefined,
                                    {
                                        xtype: 'button',
                                        text: 'Select',
                                        toggleGroup: 'modeGr',
                                        handler: function (){
                                            var selCombo = Ext.getCmp('GESelectEditableLayerCombo');
                                            selCombo.clearValue();
                                            selCombo.disable();
                                            selCombo.store.data.each(function(item){
                                                if(item.data.val.editingPanel){
                                                    item.data.val.editingPanel.deactivate();
                                                    item.data.val.editingPanel.div.style.display = 'none';
                                                }
                                            });
                                            selectControl.activate();
                                        }
                                        
                                    },
                                    '-', 
                                    {
                                        xtype: 'button',
                                        text: 'Find',
                                        handler: function(){
                                            Ext.Ajax.request({
                                                headers: {
                                                    Accept: 'application/json'
                                                },
                                                url: 'rest/documents/find',
                                                jsonData: {geoObjects: function(){
                                                    var obj = [];
                                                    for(var feat in wnd.openPetroWindows.geMapWindow.selectedFeatures){
                                                        var oneFeatArr = feat.split('.');
                                                        obj.push({
                                                            idInTable: oneFeatArr[1],
                                                            tableName: oneFeatArr[0]
                                                        });
                                                    }
                                                    return obj;// Ext.encode(obj);
                                                }.call()}
                                                ,
                                                success: function(resp, opts){
                                                    var ret = Ext.decode(resp.responseText);
                                                    //petroresConfig.makeAllIdsNumbers(ret);
                                                    //console.log(["вот, получилось", ret])
                                                    
                                                    var wnd = Ext.getCmp('MainWindow');

                                                    var stor = Ext.create('Ext.data.Store', {
                                                        model: Ext.getStore('DocumentsJsonStore').getProxy().getModel(),
                                                        data: ret,
                                                        proxy: {
                                                            type: 'memory',
                                                            reader: {
                                                                type: 'json',
                                                                root: 'documents'
                                                            }
                                                        }
                                                    });
                                                    var grid = Ext.create(
                                                        'PetroRes.view.DocumentsGridPanel', 
                                                        {
                                                            store: stor,
                                                            listeners:{
                                                                itemdblclick: function(ths, rec){

                                                                    var editForm = Ext.create(
                                                                            'PetroRes.view.DocumentFormEdit'
                                                                        );
                                                                    wnd.openPetroWindow('editDoc', {
                                                                        closable: true,
                                                                        width:wnd.getWidth()*0.9,
                                                                        title: 'Edit Document',
                                                                        maximizable: true,
                                                                        maximized: true,
                                                                        layout: 'fit',
                                                                        items: [
                                                                            editForm
                                                                        ]                                    
                                                                    });
                                                                    editForm.loadRecord(rec);
                                                                }
                                                            }
                                                        }
                                                    );
                                                    if(wnd.openPetroWindows.searchres){
                                                        wnd.openPetroWindows.searchres.close();
                                                    }
                                                    wnd.openPetroWindow('searchres', {
                                                        closable: true,
                                                        width:wnd.getWidth()*0.9,
                                                        title: 'Found Documents',
                                                        maximizable: true,
                                                        maximized: false,
                                                        layout: 'fit',
                                                        items: [
                                                            grid
                                                        ]                                    
                                                    });

                                                }
                                            });
                                        }                                        
                                    },
                                    '-', 
                                    {
                                        xtype: 'combo',
                                        id: 'GESelectEditableLayerCombo',
                                        fieldLabel: 'Edit Layer',
                                        store: Ext.create('Ext.data.Store', {
                                            fields: ['name', 'val'],
                                            data: editableLayers
                                        }),
                                        
                                        disabled: true,
                                        queryMode: 'local',
                                        displayField: 'name',
                                        valueField: 'val',
                                        listeners:{
                                            select: function(th, recs){
                                                th.store.data.each(function(item){
                                                    if(item.data.val.editingPanel){
                                                        item.data.val.editingPanel.deactivate();
                                                        item.data.val.editingPanel.div.style.display = 'none';
                                                    }
                                                })
                                                if(recs[0].data.val.editingPanel){
                                                    recs[0].data.val.editingPanel.activate();
                                                        recs[0].data.val.editingPanel.div.style.display = 'block';
                                                } 
                                            }
                                        }
                                    }, 
                                        'Measure: '
                                    , Ext.create('Ext.button.Button', Ext.create('GeoExt.Action', {
                                        toggleGroup: 'modeGr',
                                        text: 'Distance',
                                        activateOnEnable: true,
                                        deactivateOnDisable: true,
                                        control: new OpenLayers.Control.Measure(OpenLayers.Handler.Path, {
                                            eventListeners: {
                                                measure: function(evt) {
                                                    Ext.Msg.alert('Distance',
                                                        'The distance is ' + evt.measure.toFixed(2) + ' '+ evt.units);
                                                }
                                            }                                        
                                        }),
                                        map: mapPanel.map
                                    }))
                                    , Ext.create('Ext.button.Button', Ext.create('GeoExt.Action', {
                                        toggleGroup: 'modeGr',
                                        text: 'Area',
                                        activateOnEnable: true,
                                        deactivateOnDisable: true,
                                        control: new OpenLayers.Control.Measure(OpenLayers.Handler.Polygon, {
                                            eventListeners: {
                                                measure: function(evt) {
                                                    Ext.Msg.alert('Area',
                                                        'The area is ' + + evt.measure.toFixed(2) + ' '+ evt.units + '<sup>2</sup>');
                                                    //alert("The area is " + evt.measure + evt.units);
                                                }
                                            }                                        
                                        }),
                                        map: mapPanel.map
                                    }))                                    
                                    /*, Ext.create('Ext.button.Button', {
                                        text: 'PDF',
                                        disabled: true,
                                        id: 'pdfButton',
                                        handler: function() {
                                            printPage.fit(mapPanel, true);
                                            printProvider.print(mapPanel, printPage);
                                        }
                                    })*/                                         
                                ];                        
                        var wnd = Ext.getCmp('MainWindow');
                        wnd.openPetroWindow('geMapWindow', {
                            closable: true,
                            title: 'Caspian Sea',
                            maximizable: true,
                            maximized: true,
                            id: 'geMapWindow',
                            height:wnd.getHeight()*0.8,
                            width:wnd.getWidth()*0.8,
                            layout: 'border',
                            selectedFeatures: {},
                            items: [
                                mapPanel, 
                                tree,
                                legendPanel
                            ],
                            tbar: tbar
                        });
                    }
                }
                ]
            }
        },
        petroresConfig.userIsAdmin ?
        {
            xtype: 'button',
            text: 'Options',
            menu: {
                xtype: 'menu',
                //width: 120,
                items: [
                {
                    text: 'Settings',
                    menu: {
                        xtype: 'menu',
                        items: [
                        {
                            xtype: 'menuitem',
                            text: 'Authors',
                            handler: function(){
                                var wnd = Ext.getCmp('MainWindow');
                                wnd.openPetroWindow('authors', {
                                    closable: true,
                                    title: 'Authors',
                                    maximizable: true,
                                    maximized: false,
                                    layout: 'fit',
                                    items: [
                                    Ext.create('PetroRes.view.AuthorsGridPanel')
                                    ]
                                });
                            }
                        },
                        {
                            xtype: 'menuitem',
                            text: 'Projects',
                            handler: function(){
                                var wnd = Ext.getCmp('MainWindow');
                                wnd.openPetroWindow('sites', {
                                    closable: true,
                                    title: 'Projects',
                                    maximizable: true,
                                    maximized: false,
                                    layout: 'fit',
                                    items: [
                                    Ext.create('PetroRes.view.SitesGridPanel')
                                    ]
                                });
                            }
                        },
                        {
                            xtype: 'menuitem',
                            text: 'Wells',
                            handler: function(){
                                var wnd = Ext.getCmp('MainWindow');
                                wnd.openPetroWindow('wells', {
                                    closable: true,
                                    title: 'Wells',
                                    maximizable: true,
                                    maximized: false,
                                    layout: 'fit',
                                    items: [
                                    Ext.create('PetroRes.view.WellsGridPanel')
                                    ]
                                });
                            }//,
                        //scope: this
                        },
                        {
                            xtype: 'menuitem',
                            text: 'Stages',
                            handler: function(){
                                var wnd = Ext.getCmp('MainWindow');
                                wnd.openPetroWindow('stages', {
                                    closable: true,
                                    title: 'Stages',
                                    maximizable: true,
                                    maximized: false,
                                    layout: 'fit',
                                    items: [
                                    Ext.create('PetroRes.view.StagesGridPanel')
                                    ]
                                });
                            }
                        },
                        {
                            xtype: 'menuitem',
                            text: 'Update Cycles',
                            handler: function(){
                                var wnd = Ext.getCmp('MainWindow');
                                wnd.openPetroWindow('periodicities', {
                                    closable: true,
                                    title: 'Update Cycles',
                                    maximizable: true,
                                    maximized: false,
                                    layout: 'fit',
                                    items: [
                                    Ext.create('PetroRes.view.PeriodicitiesGridPanel')
                                    ]
                                });
                            }
                        },
                        {
                            xtype: 'menuitem',
                            text: 'Classifications',
                            handler: function(){
                                var wnd = Ext.getCmp('MainWindow');
                                wnd.openPetroWindow('classifications', {
                                    closable: true,
                                    title: 'Classifications',
                                    maximizable: true,
                                    maximized: false,
                                    layout: 'fit',
                                    items: [
                                    Ext.create('PetroRes.view.ClassificationsGridPanel')
                                    ]
                                });
                            }
                        },
                        {
                            xtype: 'menuitem',
                            text: 'Organizations',
                            handler: function(){
                                var wnd = Ext.getCmp('MainWindow');
                                wnd.openPetroWindow('organizations', {
                                    closable: true,
                                    title: 'Organizations',
                                    maximizable: true,
                                    maximized: false,
                                    layout: 'fit',
                                    items: [
                                    Ext.create('PetroRes.view.OrganizationsGridPanel')
                                    ]
                                });
                            }
                        },
                        {
                            xtype: 'menuitem',
                            text: 'General Types',
                            handler: function(){
                                var wnd = Ext.getCmp('MainWindow');
                                wnd.openPetroWindow('supertypes', {
                                    closable: true,
                                    title: 'General Types',
                                    maximizable: true,
                                    maximized: false,
                                    layout: 'fit',
                                    items: [
                                    Ext.create('PetroRes.view.SuperTypesGridPanel')
                                    ]
                                });
                            }
                        },
                        {
                            xtype: 'menuitem',
                            text: 'File Types',
                            handler: function(){
                                var wnd = Ext.getCmp('MainWindow');
                                wnd.openPetroWindow('filetypes', {
                                    closable: true,
                                    title: 'File Types',
                                    maximizable: true,
                                    maximized: false,
                                    layout: 'fit',
                                    items: [
                                    Ext.create('PetroRes.view.TypesGridPanel')
                                    ]
                                });
                            }
                        },
                        {
                            xtype: 'menuitem',
                            text: 'Geo Data Types',
                            handler: function(){
                                var wnd = Ext.getCmp('MainWindow');
                                wnd.openPetroWindow('geotypes', {
                                    closable: true,
                                    width:wnd.getWidth()*0.9,
                                    title: 'Geo Data Types',
                                    maximizable: true,
                                    maximized: false,
                                    layout: 'fit',
                                    items: [
                                    Ext.create('PetroRes.view.GeoTypesGridPanel')
                                    ]
                                });
                            }
                        },
                        {
                            xtype: 'menuitem',
                            text: 'Types Of Work',
                            handler: function(){
                                var wnd = Ext.getCmp('MainWindow');
                                wnd.openPetroWindow('typesOfWork', {
                                    closable: true,
                                    title: 'Types Of Work',
                                    maximizable: true,
                                    maximized: false,
                                    layout: 'fit',
                                    items: [
                                    Ext.create('PetroRes.view.TypesOfWorkGridPanel')
                                    ]
                                });
                            }
                        },
                        {
                            xtype: 'menuitem',
                            text: 'Projections',
                            handler: function(){
                                var wnd = Ext.getCmp('MainWindow');
                                wnd.openPetroWindow('projections', {
                                    closable: true,
                                    title: 'Projections',
                                    maximizable: true,
                                    maximized: false,
                                    layout: 'fit',
                                    items: [
                                    Ext.create('PetroRes.view.ProjectionsGridPanel')
                                    ]
                                });
                            }
                        },
                        {
                            xtype: 'menuitem',
                            text: 'Work Processes',
                            handler: function(){
                                var wnd = Ext.getCmp('MainWindow');
                                wnd.openPetroWindow('workProcesses', {
                                    closable: true,
                                    title: 'Work Processes',
                                    maximizable: true,
                                    maximized: false,
                                    layout: 'fit',
                                    items: [
                                    Ext.create('PetroRes.view.WorkProcessesGridPanel')
                                    ]
                                });
                            }
                        },
                        {
                            xtype: 'menuitem',
                            text: 'Domains Tree',
                            handler: function(){
                                var wnd = Ext.getCmp('MainWindow');
                                var store = Ext.data.StoreManager.lookup('AdminDomainsJsonTreeStore');
                                if(!store)
                                    Ext.create( 'PetroRes.store.DomainsJsonTreeStore', 
                                                {storeId:'AdminDomainsJsonTreeStore'});

                                wnd.openPetroWindow('domains', {
                                    closable: true,
                                    width:wnd.getWidth()*0.9,
                                    title: 'Domains Tree',
                                    maximizable: true,
                                    maximized: false,
                                    layout: 'fit',
                                    items: [
                                        Ext.create('PetroRes.view.DomainsTreePanel', 
                                                    {editable:true, store:'AdminDomainsJsonTreeStore'})
                                    ]
                                });
                            }
                        } ]
                    }
                }
                ]
            }
        }:undefined
        , {
            xtype: 'button',
            //xtype: 'menuitem',
            text: 'Help',
            handler: function(){
                var wnd = Ext.getCmp('MainWindow');
                wnd.openPetroWindow('helpWindow', {
                    closable: true,
                    title: 'Help',
                    maximizable: true,
                    maximized: false,
                    layout: 'fit',
                    items: [
                    {
                        layout:'border',
                        defaults: {
                            collapsible: true,
                            split: true
                        },
                        items: [
                        {
                            xtype:'treepanel',
                            listeners: {
                                itemclick: function(a, b, c){
                                    console.log (arguments);
                                    if(b.raw.url){
                                        Ext.getCmp('helpIframe').body.dom.innerHTML= 
                                            '<iframe style="border: none;" height="100%" width="100%" src="' + b.raw.url + '"></iframe>'
                                    }
//if(a.attributes.url) Ext.getCmp('helpIframe').body.dom.innerHTML= '<iframe style="border: none;" height="100%" width="100%" src="' + a.attributes.url + '"></iframe>'
                                }
                            },
                            rootVisible: false,
                            region:'west',
                            //margins: '5 0 0 0',
                            //cmargins: '5 5 0 0',
                            width: 175,
                            minSize: 100,
                            maxSize: 250,
                            useArrows:true,
                            autoScroll:true,
                            animate:true,
                            containerScroll: true,
                            border: false,
                            root: {
                                children: petroresConfig.helpInfo
                            }
                        },
                        {
                            collapsible: false,
                            region:'center',
                            margins: '5 0 0 0',
                            id: 'helpIframe'
                        }
                        ]
                    }
                    ]
                });
            }
        }
        ]
    }
    ],
    initComponent: function() {
        var me = this;
        me.callParent(arguments);
    }
});
